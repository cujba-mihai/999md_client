const { initReactI18next } = require('react-i18next');
const path = require('path');

module.exports = {
    i18n: {
      nonExplicitSupportedLngs: true, // if true, will consider variants as supported when the main language is. E.g. en-US will be valid if en is in supportedLngs
      preload: ["en", "ru", "ro"],
      use: [initReactI18next],
      localeDetection: true,
      debug: true,
      serializeConfig: false,
      locales: [ 
        'en', 
        'ro',
        'ru', 
        'ru-MD', 
        'ru-mo', 
        'ru-RU', 
        'ro-MD', 
        'ro-RO',
        'en-AU',
        'en-BZ',
        'en-CA',
        'en-cb',
        'en-GB',
        'en-IE',
        'en-IN',
        'en-JM',
        'en-MT',
        'en-MY',
        'en-NZ',
        'en-PH',
        'en-SG',
        'en-TT',
        'en-US',
        'en-ZA',
        'en-ZW',
      
      ],
        defaultLocale: 'en',
      },
      fallbackLng: {
        default: ['en'],
        'ru-MD': ['ru'], 
        'ru-mo': ['ru'], 
        'ru-RU': ['ru'], 
        'ro-MD': ['ro'], 
        'ro-RO': ['ro'],
        'en-AU': ['en'],
        'en-BZ': ['en'],
        'en-CA': ['en'],
        'en-cb': ['en'],
        'en-GB': ['en'],
        'en-IE': ['en'],
        'en-IN': ['en'],
        'en-JM': ['en'],
        'en-MT': ['en'],
        'en-MY': ['en'],
        'en-NZ': ['en'],
        'en-PH': ['en'],
        'en-SG': ['en'],
        'en-TT': ['en'],
        'en-US': ['en'],
        'en-ZA': ['en'],
        'en-ZW': ['en'],
      },
  }